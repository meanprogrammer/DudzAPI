//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DudzAPI {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DudzAPI.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to with RESULT0
        ///as
        ///(
        ///	select  
        ///	[CounterParty].Id as CounterPartyIdTo,
        ///	[CounterParty].Shortname as ShortnameTo,
        ///	[Country].Country as CountryTo,
        ///	sum(isnull([Allocation].SublimitAmountInUSD2,0)) as SublimitAmountInUSDTo,
        ///	SubLimitTypeTo.Id as SubLimitTypeIdTo,
        ///	isnull(SubLimitTypeTo.Mnemonic,&apos;&apos;) as SubLimitTypeTo
        ///	from [Allocation]
        ///
        ///	left join [SystemStatus]
        ///	on [SystemStatus].Id = [Allocation].AllocationSystemStatusId
        ///
        ///	left join [Status]
        ///	on [Status].Id = [Allocation].StatusCodeId
        ///
        ///	left j [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GET_LIMIT_BY_COUNTERPARTYID {
            get {
                return ResourceManager.GetString("GET_LIMIT_BY_COUNTERPARTYID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to with RESULT0
        ///as
        ///(
        ///	select  
        ///	[CounterParty].Id as CounterPartyIdTo,
        ///	[CounterParty].Shortname as ShortnameTo,
        ///	[Country].Country as CountryTo,
        ///	sum(isnull([Allocation].SublimitAmountInUSD2,0)) as SublimitAmountInUSDTo,
        ///	SubLimitTypeTo.Id as SubLimitTypeIdTo,
        ///	isnull(SubLimitTypeTo.Mnemonic,&apos;&apos;) as SubLimitTypeTo
        ///	from [Allocation]
        ///
        ///	left join [SystemStatus]
        ///	on [SystemStatus].Id = [Allocation].AllocationSystemStatusId
        ///
        ///	left join [Status]
        ///	on [Status].Id = [Allocation].StatusCodeId
        ///
        ///	left j [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GET_LIMIT_BY_COUNTERPARTYID_LIMITTYPE {
            get {
                return ResourceManager.GetString("GET_LIMIT_BY_COUNTERPARTYID_LIMITTYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to with RESULT0
        ///as
        ///(
        ///	select  
        ///	[CounterParty].Id as CounterPartyIdTo,
        ///	[CounterParty].Shortname as ShortnameTo,
        ///	[Country].Country as CountryTo,
        ///	sum(isnull([Allocation].SublimitAmountInUSD2,0)) as SublimitAmountInUSDTo,
        ///	SubLimitTypeTo.Id as SubLimitTypeIdTo,
        ///	isnull(SubLimitTypeTo.Mnemonic,&apos;&apos;) as SubLimitTypeTo
        ///	from [Allocation]
        ///
        ///	left join [SystemStatus]
        ///	on [SystemStatus].Id = [Allocation].AllocationSystemStatusId
        ///
        ///	left join [Status]
        ///	on [Status].Id = [Allocation].StatusCodeId
        ///
        ///	left j [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GETALL_LIMIT_SQL {
            get {
                return ResourceManager.GetString("GETALL_LIMIT_SQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [dbo].[TransactionCounterparties]
        ///           ([TransactionId]
        ///           ,[IssuingBankId]
        ///           ,[IssuingBankBranch]
        ///           ,[SublimitId]
        ///           ,[OtherIssuingBankId]
        ///           ,[ConfirmingBankId]
        ///           ,[ConfirmingBankBranchId]
        ///           ,[OtherConfirmingBankId]
        ///           ,[OriginatingBankId]
        ///           ,[IBSWIFTName]
        ///           ,[CBSWIFTName]
        ///           ,[CBBranchSWIFTName]
        ///           ,[LastUpdatedOn])
        ///     VALUES
        ///           ({0}--transactionId
        ///           , [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string INSERT_COUNTERPARTIES_SQL {
            get {
                return ResourceManager.GetString("INSERT_COUNTERPARTIES_SQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [dbo].[TransactionADBExposure]
        ///           ([TransactionId]
        ///           ,[UEIId]
        ///           ,[ProposedDateofInitialContact]
        ///           ,[ProposedCorrespondenceFrom]
        ///           ,[ProposedTenor0]
        ///           ,[ProposedTenorUnit0]
        ///           ,[ProposedIssuanceDate]
        ///           ,[ProposedExpiryDate]
        ///           ,[ProposedTenor1]
        ///           ,[ProposedAllowanceforClaim]
        ///           ,[ProposedNumDaysToConvertTenor]
        ///           ,[ProposedOperand]
        ///           ,[ProposedTenor3]
        ///           ,[Proposed [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string INSERT_TRANS_ADB_EXPOSURE {
            get {
                return ResourceManager.GetString("INSERT_TRANS_ADB_EXPOSURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [dbo].[Transaction]
        ///           ([ProductTypeId]
        ///           ,[CounterpartyId]
        ///           ,[TransactionType]
        ///           ,[FacilitySublimitId]
        ///           ,[ADBReferenceNumber]
        ///           ,[SequenceNumber]
        ///           ,[SubsequenceNumber]
        ///           ,[DisbursementNumber]
        ///           ,[FirmTransaction]
        ///           ,[StatusId]
        ///           ,[StatusDate]
        ///           ,[SystemStatus]
        ///           ,[SystemStatusDate]
        ///           ,[UserId])
        ///     VALUES
        ///	 (
        ///	 12, --12 = CG
        ///	 {0}, -- Counterparty -- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string INSERT_TRANSACTION_SQL {
            get {
                return ResourceManager.GetString("INSERT_TRANSACTION_SQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [dbo].[TransactionUEI]
        ///           (
        ///		   [UETDId]
        ///           ,[TransactionId]
        ///           ,[EligibleInstrumentType]
        ///           ,[EliglbleTradeTransactionType]
        ///           ,[LCType]
        ///           ,[Funded]
        ///           ,[EligibleInstrumentFormReferenceNumber]
        ///           ,[TRNofConfirmingBank]
        ///           ,[TRNofIssuingBank]
        ///           ,[Applicant]
        ///           ,[ApplicantCompanyAddressId]
        ///           ,[ApplicantNameInSWIFT]
        ///           ,[Beneficiary]
        ///           ,[BeneficiaryCompanyAddressId]
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string INSERT_TRANSACTION_UEI_SQL {
            get {
                return ResourceManager.GetString("INSERT_TRANSACTION_UEI_SQL", resourceCulture);
            }
        }
    }
}
